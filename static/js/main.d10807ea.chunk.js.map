{"version":3,"sources":["components/HeaderContainer.js","components/Home.js","components/Movie.js","components/User.js","components/Submit.js","components/Signup.js","components/Login.js","components/ViewAll.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","props","className","to","localStorage","id","username","Button","href","onClick","clear","console","log","axios","require","Home","useState","allMovies","setAllMovies","useEffect","get","then","res","data","getTopFive","genre","topFive","filter","movie","sort","a","b","avgRating","splice","length","bullets","map","_id","title","ratings","style","color","ViewAll","addViewAll","push","withRouter","url","match","params","movieData","setMovieData","rating","setRating","usersRating","setUsersRating","temp","find","createdBy","userName","Math","abs","synopsis","Form","Group","controlId","Label","Control","onChange","evt","target","value","as","defaultValue","ratingInfo","put","editRating","variant","type","post","postRating","preventDefault","delete","history","User","userData","setUserData","user","movies","Create","setTitle","plot","setPlot","setGenre","Text","placeholder","rows","newMovie","catch","err","postMovie","credentials","setCredentials","email","setEmail","password","setPassword","setUsername","error","setError","info","setItem","window","location","reload","getInfoAndValidate","Container","movieList","setMovieList","App","exact","path","component","Submit","Movie","Login","Signup","Boolean","hostname","ReactDOM","render","createHistory","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d10807ea.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nconst HeaderContainer = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<nav className=\"nav-bar\">\n\t\t\t\t<h3>cinopsis</h3>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<h3>Home</h3>\n\t\t\t\t</Link>\n\t\t\t\t{localStorage.id && (\n\t\t\t\t\t<Link to=\"/new\">\n\t\t\t\t\t\t<h3>Submit</h3>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t{!localStorage.id && (\n\t\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t\t<h3>Log in</h3>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t{localStorage.username && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Signed in as: {localStorage.username}</h3>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\t\t\tconsole.log('logging out');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</nav>\n\t\t</div>\n\t);\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst axios = require('axios');\nconst url = 'https://cinopsis.herokuapp.com/api/movies';\n\nconst Home = (props) => {\n\tconst [allMovies, setAllMovies] = useState([]);\n\n\t//getting and setting all movies\n\tuseEffect(() => {\n\t\taxios.get(url).then((res) => setAllMovies(res.data));\n\t}, []);\n\n\tconst getTopFive = (genre) => {\n\t\tconst topFive = allMovies\n\t\t\t.filter((movie) => movie.genre === genre)\n\t\t\t.sort((a, b) => (a.avgRating > b.avgRating ? -1 : 1));\n\t\ttopFive.splice(5, topFive.length - 1);\n\t\tconst bullets = topFive.map((movie) => {\n\t\t\treturn (\n\t\t\t\t<Link to={'movie/' + movie._id}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{movie.title}{' '}\n\t\t\t\t\t\t{movie.ratings.length > 0 && (\n\t\t\t\t\t\t\t<span style={{ color: 'black' }}>\n\t\t\t\t\t\t\t\tAverage Rating:{movie.avgRating}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</li>\n\t\t\t\t</Link>\n\t\t\t);\n\t\t});\n\t\tif (bullets.length >= 5) {\n\t\t\tconst ViewAll = addViewAll(genre);\n\t\t\tbullets.push(ViewAll);\n\t\t}\n\t\treturn bullets;\n\t};\n\tconst addViewAll = (genre) => {\n\t\treturn <Link to={`genre/${genre}`}>View All</Link>;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Home</h1>\n\t\t\t<main className=\"homeMain\">\n\t\t\t\t<div className=\"homeList\">\n\t\t\t\t\t<h2>Submissions</h2>\n\t\t\t\t\t<h3>Comedy</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{allMovies &&\n\t\t\t\t\t\t\t(getTopFive('Comedy').length ? (\n\t\t\t\t\t\t\t\tgetTopFive('Comedy')\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<li>No Comedies At This Time</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h3>Romance</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{allMovies &&\n\t\t\t\t\t\t\t(getTopFive('Romance').length ? (\n\t\t\t\t\t\t\t\tgetTopFive('Romance')\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<li>No Romance At This Time</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h3>Action</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{allMovies &&\n\t\t\t\t\t\t\t(getTopFive('Action').length ? (\n\t\t\t\t\t\t\t\tgetTopFive('Action')\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<li>No Actions At This Time</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h3>Horror</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{allMovies &&\n\t\t\t\t\t\t\t(getTopFive('Horror').length ? (\n\t\t\t\t\t\t\t\tgetTopFive('Horror')\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<li>No Horrors At This Time</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h3>Drama</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{allMovies &&\n\t\t\t\t\t\t\t(getTopFive('Drama').length ? (\n\t\t\t\t\t\t\t\tgetTopFive('Drama')\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<li>No Dramas At This Time</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Aside</h2>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { withRouter, Link } from 'react-router-dom';\nconst axios = require('axios');\n\nconst Movie = (props) => {\n\tconst url = `https://cinopsis.herokuapp.com/api/movies/${props.match.params.id}`;\n\n\tconst [movieData, setMovieData] = useState();\n\tconst [rating, setRating] = useState(0);\n\tconst [usersRating, setUsersRating] = useState();\n\n\tuseEffect(() => {\n\t\taxios.get(url).then((res) => {\n\t\t\tsetMovieData(res.data);\n\t\t\tlet temp = res.data.movie.ratings.find(\n\t\t\t\t(rating) => localStorage.id === rating.createdBy\n\t\t\t);\n\t\t\tsetUsersRating(temp);\n\t\t});\n\t}, [url, usersRating]);\n\n\tconst postRating = () => {\n\t\tconst ratingInfo = { rating, createdBy: localStorage.id };\n\t\taxios.post(url + '/rating', ratingInfo);\n\t};\n\tconst deleteMovie = () => {\n\t\taxios.delete(url).then((res) => props.history.push('/'));\n\t};\n\n\tconst editRating = () => {\n\t\tconst ratingInfo = { rating, createdBy: localStorage.id };\n\t\taxios.put(\n\t\t\t`https://cinopsis.herokuapp.com/api/rating/${usersRating._id}`,\n\t\t\tratingInfo\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{movieData && (\n\t\t\t\t<>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tTitle : <em>{movieData.movie.title}</em>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\tAuthor:\n\t\t\t\t\t\t<Link to={`/user/${movieData._id}`}>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{movieData.userName}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</h4>\n\t\t\t\t\t<h3>\n\t\t\t\t\t\tAverage Rating:{' '}\n\t\t\t\t\t\t{movieData.movie.ratings.length > 0 &&\n\t\t\t\t\t\t\tMath.abs(movieData.movie.avgRating)}\n\t\t\t\t\t\t{!movieData.movie.ratings.length > 0 &&\n\t\t\t\t\t\t\t'No ratings yet!'}\n\t\t\t\t\t</h3>\n\t\t\t\t\t<h4>Synopsis</h4>\n\t\t\t\t\t<p>{movieData.movie.synopsis}</p>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t{!usersRating && (\n\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\n\t\t\t\t\t\t\t\t<Form.Label>Rate Movie</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tonChange={(evt) =>\n\t\t\t\t\t\t\t\t\t\tsetRating(evt.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclassName=\"genre-submit\"\n\t\t\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option>0</option>\n\t\t\t\t\t\t\t\t\t<option>1</option>\n\t\t\t\t\t\t\t\t\t<option>2</option>\n\t\t\t\t\t\t\t\t\t<option>3</option>\n\t\t\t\t\t\t\t\t\t<option>4</option>\n\t\t\t\t\t\t\t\t\t<option>5</option>\n\t\t\t\t\t\t\t\t\t<option>6</option>\n\t\t\t\t\t\t\t\t\t<option>7</option>\n\t\t\t\t\t\t\t\t\t<option>8</option>\n\t\t\t\t\t\t\t\t\t<option>9</option>\n\t\t\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{usersRating && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span>You've already rated this film:</span>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\tdefaultValue={usersRating.rating}\n\t\t\t\t\t\t\t\t\t\tonChange={(evt) =>\n\t\t\t\t\t\t\t\t\t\t\tsetRating(evt.target.value)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tclassName=\"genre-submit\"\n\t\t\t\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option>0</option>\n\t\t\t\t\t\t\t\t\t\t<option>1</option>\n\t\t\t\t\t\t\t\t\t\t<option>2</option>\n\t\t\t\t\t\t\t\t\t\t<option>3</option>\n\t\t\t\t\t\t\t\t\t\t<option>4</option>\n\t\t\t\t\t\t\t\t\t\t<option>5</option>\n\t\t\t\t\t\t\t\t\t\t<option>6</option>\n\t\t\t\t\t\t\t\t\t\t<option>7</option>\n\t\t\t\t\t\t\t\t\t\t<option>8</option>\n\t\t\t\t\t\t\t\t\t\t<option>9</option>\n\t\t\t\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\t\teditRating();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit Rating\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!usersRating && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\tpostRating();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit Rating\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{localStorage.id === movieData.movie.createdBy && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\t\t\tdeleteMovie();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDelete Movie\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Form>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default withRouter(Movie);\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nconst axios = require('axios');\n\nconst User = (props) => {\n\tconst [userData, setUserData] = useState();\n\n\tconst url = `https://cinopsis.herokuapp.com/api/user/${props.match.params.id}`;\n\n\tuseEffect(() => {\n\t\taxios.get(url).then((res) => {\n\t\t\tconsole.log(res.data);\n\t\t\tsetUserData(res.data);\n\t\t});\n\t}, [url]);\n\n\treturn (\n\t\t<div>\n\t\t\t{userData && (\n\t\t\t\t<>\n\t\t\t\t\t<h2>{userData.user.userName}</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{userData.movies.map((movie) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to={`/movie/${movie._id}`}>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t{movie.title}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default User;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Create = (props) => {\n\tconst [title, setTitle] = useState('');\n\tconst [plot, setPlot] = useState('');\n\tconst [genre, setGenre] = useState('Horror');\n\n\tconst postMovie = () => {\n\t\tconst newMovie = {\n\t\t\ttitle,\n\t\t\tsynopsis: plot,\n\t\t\tgenre,\n\t\t\tcreatedBy: localStorage.id\n\t\t};\n\n\t\taxios\n\t\t\t.post('https://cinopsis.herokuapp.com/api/movies', newMovie)\n\t\t\t.then((res) => {\n\t\t\t\tprops.history.push('/');\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form>\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setTitle(evt.target.value)}\n\t\t\t\t\tclassName=\"title-submit\"\n\t\t\t\t\tcontrolId=\"formBasicText\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Title</Form.Label>\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Title\" />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setPlot(evt.target.value)}\n\t\t\t\t\tclassName=\"synopsis-submit\"\n\t\t\t\t\tcontrolId=\"exampleForm.ControlTextarea1\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Synopsis</Form.Label>\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t\t<Form.Control placeholder=\"Plot\" as=\"textarea\" rows=\"15\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\n\t\t\t\t\t<Form.Label>Genre</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={(evt) => setGenre(evt.target.value)}\n\t\t\t\t\t\tclassName=\"genre-submit\"\n\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option>Horror</option>\n\t\t\t\t\t\t<option>Comedy</option>\n\t\t\t\t\t\t<option>Action</option>\n\t\t\t\t\t\t<option>Drama</option>\n\t\t\t\t\t\t<option>Romance</option>\n\t\t\t\t\t</Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button\n\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tpostMovie();\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"submission-button\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default Create;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = (props) => {\n\tconst [credentials, setCredentials] = useState({});\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [username, setUsername] = useState('');\n\tconst [error, setError] = useState('');\n\n\tconst getInfoAndValidate = () => {\n\t\tconst info = { email, password, userName: username };\n\n\t\tsetCredentials(info);\n\t\taxios\n\t\t\t.post('https://cinopsis.herokuapp.com/api/user', info)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.error) {\n\t\t\t\t\tsetError(res.data.error);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem('id', res.data._id);\n\t\t\t\t\tlocalStorage.setItem('username', res.data.userName);\n\t\t\t\t\tprops.history.push('/');\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\n\t\t//needs validation\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form className=\"login-form\">\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setUsername(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicText\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter username\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setEmail(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicEmail\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setPassword(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicPassword\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tgetInfoAndValidate();\n\n\t\t\t\t\t\tconsole.log(credentials);\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tSign up\n\t\t\t\t</Button>\n\t\t\t\t{error && <h3 style={{ color: 'red' }}>{error}</h3>}\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = (props) => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [error, setError] = useState('');\n\n\tconst getInfoAndValidate = () => {\n\t\tconst info = { email, password };\n\n\t\taxios\n\t\t\t.post('https://cinopsis.herokuapp.com/api/user/login', info)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.error) {\n\t\t\t\t\tsetError(res.data.error);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem('id', res.data._id);\n\t\t\t\t\tlocalStorage.setItem('username', res.data.userName);\n\t\t\t\t\tprops.history.push('/');\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\n\t\t//needs validation\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form className=\"login-form\">\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setEmail(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicEmail\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setPassword(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicPassword\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Container>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\tgetInfoAndValidate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"dark\" href=\"/signup\">\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t\t{error && <h3 style={{ color: 'red' }}>{error}</h3>}\n\t\t\t\t</Container>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst axios = require('axios');\nconst ViewAll = (props) => {\n\tconst url = `https://cinopsis.herokuapp.com/api/movies/?genre=${props.match.params.genre}`;\n\tconst [movieList, setMovieList] = useState([]);\n\tuseEffect(() => {\n\t\taxios.get(url).then((res) => setMovieList(res.data));\n\t}, [url]);\n\treturn (\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{movieList.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Link to={`/movie/${movie._id}`}>\n\t\t\t\t\t\t\t<li>{movie.title}</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default ViewAll;\n","import React from 'react';\nimport HeaderContainer from './components/HeaderContainer';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport User from './components/User';\nimport Submit from './components/Submit';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport ViewAll from './components/ViewAll';\nimport { Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<HeaderContainer />\n\t\t\t</div>\n\t\t\t<main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/new\" component={Submit} />\n\t\t\t\t\t<Route exact path=\"/movie/:id\" component={Movie} />\n\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t\t\t<Route exact path=\"/genre/:genre\" component={ViewAll} />\n\t\t\t\t\t<Route exact path=\"/user/:id\" component={User} />\n\t\t\t\t\t<User />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\n\nReactDOM.render(\n   <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\n      <App />\n   </Router>,\n   document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}