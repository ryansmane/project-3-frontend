{"version":3,"sources":["components/HeaderContainer.js","components/Home.js","components/Movie.js","components/User.js","components/Submit.js","components/Signup.js","components/Login.js","components/ViewAll.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","props","className","to","localStorage","id","username","Button","href","onClick","clear","console","log","axios","require","Home","useState","allMovies","setAllMovies","useEffect","get","then","res","data","getTopFive","genre","topFive","filter","movie","sort","a","b","avgRating","splice","length","bullets","map","_id","title","ratings","style","color","ViewAll","addViewAll","push","withRouter","url","match","params","movieData","setMovieData","rating","setRating","usersRating","setUsersRating","temp","find","createdBy","userName","Math","abs","synopsis","Form","Group","controlId","Label","Control","onChange","evt","target","value","as","defaultValue","ratingInfo","put","editRating","variant","type","post","postRating","preventDefault","delete","history","User","userData","setUserData","user","movies","Create","setTitle","plot","setPlot","setGenre","Text","placeholder","rows","newMovie","catch","err","postMovie","credentials","setCredentials","email","setEmail","password","setPassword","setUsername","error","setError","info","setItem","window","location","reload","getInfoAndValidate","Container","movieList","setMovieList","App","exact","path","component","Submit","Movie","Login","Signup","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fb484de.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Route, Link, Switch } from 'react-router-dom';\n\nconst HeaderContainer = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<nav className=\"nav-bar\">\n\t\t\t\t<h3>Movie App</h3>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<h3>Home</h3>\n\t\t\t\t</Link>\n\t\t\t\t{localStorage.id && (\n\t\t\t\t\t<Link to=\"/new\">\n\t\t\t\t\t\t<h3>Submit</h3>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t{!localStorage.id && (\n\t\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t\t<h3>Log in</h3>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t{localStorage.username && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Signed in as: {localStorage.username}</h3>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\t\t\tconsole.log('logging out');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</nav>\n\t\t</div>\n\t);\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst axios = require('axios');\nconst url = 'http://localhost:8080/api/movies';\n\nconst Home = props => {\n  const [allMovies, setAllMovies] = useState([]);\n\n  //getting and setting all movies\n  useEffect(() => {\n    axios.get(url).then(res => setAllMovies(res.data));\n  }, []);\n\n  const getTopFive = genre => {\n    const topFive = allMovies\n      .filter(movie => movie.genre === genre)\n      .sort((a, b) => (a.avgRating > b.avgRating ? -1 : 1));\n    topFive.splice(5, topFive.length - 1);\n    const bullets = topFive.map(movie => {\n      return (\n        <Link to={'movie/' + movie._id}>\n          <li>\n            {movie.title}{' '}\n            {movie.ratings.length > 0 && (\n              <span style={{ color: 'black' }}>\n                Average Rating:{movie.avgRating}\n              </span>\n            )}\n          </li>\n        </Link>\n      );\n    });\n    if (bullets.length >= 5) {\n      const ViewAll = addViewAll(genre);\n      bullets.push(ViewAll);\n    }\n    return bullets;\n  };\n  const addViewAll = genre => {\n    return <Link to={`genre/${genre}`}>View All</Link>;\n  };\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <main className=\"homeMain\">\n        <div className=\"homeList\">\n          <h2>Submissions</h2>\n          <h3>Comedy</h3>\n          <ul>\n            {allMovies &&\n              (getTopFive('Comedy').length ? (\n                getTopFive('Comedy')\n              ) : (\n                <li>No Comedies At This Time</li>\n              ))}\n          </ul>\n          <h3>Romance</h3>\n          <ul>\n            {allMovies &&\n              (getTopFive('Romance').length ? (\n                getTopFive('Romance')\n              ) : (\n                <li>No Romance At This Time</li>\n              ))}\n          </ul>\n          <h3>Action</h3>\n          <ul>\n            {allMovies &&\n              (getTopFive('Action').length ? (\n                getTopFive('Action')\n              ) : (\n                <li>No Actions At This Time</li>\n              ))}\n          </ul>\n          <h3>Horror</h3>\n          <ul>\n            {allMovies &&\n              (getTopFive('Horror').length ? (\n                getTopFive('Horror')\n              ) : (\n                <li>No Horrors At This Time</li>\n              ))}\n          </ul>\n          <h3>Drama</h3>\n          <ul>\n            {allMovies &&\n              (getTopFive('Drama').length ? (\n                getTopFive('Drama')\n              ) : (\n                <li>No Dramas At This Time</li>\n              ))}\n          </ul>\n        </div>\n        <div>\n          <h2>Aside</h2>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { withRouter, Link } from 'react-router-dom';\nconst axios = require('axios');\n\nconst Movie = props => {\n   const url = `http://localhost:8080/api/movies/${props.match.params.id}`;\n\n   const [movieData, setMovieData] = useState();\n   const [rating, setRating] = useState(0);\n   const [usersRating, setUsersRating] = useState();\n\n   useEffect(() => {\n      axios.get(url).then(res => {\n         setMovieData(res.data);\n         let temp = res.data.movie.ratings.find(\n            rating => localStorage.id === rating.createdBy\n         );\n         setUsersRating(temp);\n      });\n   }, [usersRating]);\n\n   const postRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios.post(url + '/rating', ratingInfo);\n   };\n   const deleteMovie = () => {\n      axios.delete(url).then(res => props.history.push('/'));\n   };\n\n   const editRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios\n         .put(`http://localhost:8080/api/rating/${usersRating._id}`, ratingInfo)\n         \n   }\n\n   return (\n      <div>\n         {movieData && (\n            <>\n               <h2>\n                  Title : <em>{movieData.movie.title}</em>\n               </h2>\n               <h4>\n                  Author:\n                  <Link to={`/user/${movieData._id}`}>\n                     {' '}\n                     {movieData.userName}\n                  </Link>\n               </h4>\n               <h3>\n                  Average Rating:{' '}\n                  {movieData.movie.ratings.length > 0 &&\n                     Math.abs(movieData.movie.avgRating)}{!movieData.movie.ratings.length > 0 && 'No ratings yet!'}\n               </h3>\n               <h4>Synopsis</h4>\n               <p>{movieData.movie.synopsis}</p>\n               <Form>\n                  {!usersRating && (\n                     <Form.Group controlId='exampleForm.ControlSelect1'>\n                        <Form.Label>Rate Movie</Form.Label>\n                        <Form.Control\n                           onChange={evt => setRating(evt.target.value)}\n                           className='genre-submit'\n                           as='select'\n                        >\n                           <option>0</option>\n                           <option>1</option>\n                           <option>2</option>\n                           <option>3</option>\n                           <option>4</option>\n                           <option>5</option>\n                           <option>6</option>\n                           <option>7</option>\n                           <option>8</option>\n                           <option>9</option>\n                           <option>10</option>\n                        </Form.Control>\n                     </Form.Group>\n                  )}\n                  {usersRating && (\n                     <div>\n                        <span>\n                           You've already rated this film:\n                           </span>\n                              <Form.Group controlId='exampleForm.ControlSelect1'>\n                                 \n                                 <Form.Control\n                                  defaultValue={usersRating.rating}\n                                    onChange={evt =>\n                                       setRating(evt.target.value)\n                                    }\n                                    className='genre-submit'\n                                    as='select'\n                                 >\n                                    <option>0</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                    <option>6</option>\n                                    <option>7</option>\n                                    <option>8</option>\n                                    <option>9</option>\n                                    <option>10</option>\n                                 </Form.Control>\n                              </Form.Group>\n                           \n                        \n                        <Button\n                           onClick={evt => {\n                              editRating();\n                           }}\n                           variant='primary'\n                           type='submit'\n                        >\n                           Edit Rating\n                        </Button>\n                     </div>\n                  )}\n                  {!usersRating && (\n                     <Button\n                        onClick={evt => {\n                           \n                           postRating();\n                        }}\n                        variant='primary'\n                        type='submit'\n                     >\n                        Submit Rating\n                     </Button>\n                  )}\n\n                  {localStorage.id === movieData.movie.createdBy && (\n                     <Button\n                        onClick={evt => {\n                           evt.preventDefault();\n                           deleteMovie();\n                        }}\n                        variant='danger'\n                        type='submit'\n                     >\n                        Delete Movie\n                     </Button>\n                  )}\n               </Form>\n            </>\n         )}\n      </div>\n   );\n};\n\nexport default withRouter(Movie);\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nconst axios = require('axios');\n\nconst User = props => {\n  const [userData, setUserData] = useState();\n\n  const url = `http://localhost:8080/api/user/${props.match.params.id}`;\n\n  useEffect(() => {\n    axios.get(url).then(res => {\n      console.log(res.data);\n      setUserData(res.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      {userData && (\n        <>\n          <h2>{userData.user.userName}</h2>\n          <ul>\n            {userData.movies.map(movie => {\n              return (\n                <li>\n                  <Link to={`/movie/${movie._id}`}> {movie.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState, useEffect } from 'react';\nconst axios = require('axios');\nconst url = '';\n\nconst Create = (props) => {\n\tconst [title, setTitle] = useState('');\n\tconst [plot, setPlot] = useState('');\n\tconst [genre, setGenre] = useState('Horror');\n\n\tconst postMovie = () => {\n\t\tconst newMovie = {\n\t\t\ttitle,\n\t\t\tsynopsis: plot,\n\t\t\tgenre,\n\t\t\tcreatedBy: localStorage.id\n\t\t};\n\n\t\taxios\n\t\t\t.post('http://localhost:8080/api/movies', newMovie)\n\t\t\t.then((res) => {\n\t\t\t\tprops.history.push('/');\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form>\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setTitle(evt.target.value)}\n\t\t\t\t\tclassName=\"title-submit\"\n\t\t\t\t\tcontrolId=\"formBasicText\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Title</Form.Label>\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Title\" />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setPlot(evt.target.value)}\n\t\t\t\t\tclassName=\"synopsis-submit\"\n\t\t\t\t\tcontrolId=\"exampleForm.ControlTextarea1\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Synopsis</Form.Label>\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t\t<Form.Control placeholder=\"Plot\" as=\"textarea\" rows=\"15\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\n\t\t\t\t\t<Form.Label>Genre</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={(evt) => setGenre(evt.target.value)}\n\t\t\t\t\t\tclassName=\"genre-submit\"\n\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option>Horror</option>\n\t\t\t\t\t\t<option>Comedy</option>\n\t\t\t\t\t\t<option>Action</option>\n\t\t\t\t\t\t<option>Drama</option>\n\t\t\t\t\t\t<option>Romance</option>\n\t\t\t\t\t</Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button\n\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tpostMovie();\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"submission-button\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default Create;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState, useEffect } from 'react';\nconst axios = require('axios');\n\nconst Login = props => {\n  const [credentials, setCredentials] = useState({});\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n\n  const getInfoAndValidate = () => {\n    const info = { email, password, userName: username };\n\n    setCredentials(info);\n    axios\n      .post('http://localhost:8080/api/user', info)\n      .then(res => {\n        if (res.data.error) {\n          setError(res.data.error);\n        } else {\n          localStorage.setItem('id', res.data._id);\n          localStorage.setItem('username', res.data.userName);\n          props.history.push('/');\n          window.location.reload();\n        }\n      })\n      .catch(err => console.log(err));\n\n    //needs validation\n  };\n\n  return (\n    <div>\n      <Form className=\"login-form\">\n        <Form.Group\n          onChange={evt => setUsername(evt.target.value)}\n          controlId=\"formBasicText\"\n        >\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter username\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n        <Form.Group\n          onChange={evt => setEmail(evt.target.value)}\n          controlId=\"formBasicEmail\"\n        >\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group\n          onChange={evt => setPassword(evt.target.value)}\n          controlId=\"formBasicPassword\"\n        >\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <Button\n          onClick={evt => {\n            evt.preventDefault();\n            getInfoAndValidate();\n\n            console.log(credentials);\n          }}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Sign up\n        </Button>\n        {error && <h3 style={{ color: 'red' }}>{error}</h3>}\n      </Form>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useState, useEffect } from 'react';\nconst axios = require('axios');\n\nconst Login = (props) => {\n\tconst [credentials, setCredentials] = useState({});\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [error, setError] = useState('');\n\n\tconst getInfoAndValidate = () => {\n\t\tconst info = { email, password };\n\t\tsetCredentials(info);\n\t\taxios\n\t\t\t.post('http://localhost:8080/api/user/login', info)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.error) {\n\t\t\t\t\tsetError(res.data.error);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem('id', res.data._id);\n\t\t\t\t\tlocalStorage.setItem('username', res.data.userName);\n\t\t\t\t\tprops.history.push('/');\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\n\t\t//needs validation\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form className=\"login-form\">\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setEmail(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicEmail\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setPassword(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicPassword\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Container>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\tgetInfoAndValidate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"dark\" href=\"/signup\">\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t\t{error && <h3 style={{ color: 'red' }}>{error}</h3>}\n\t\t\t\t</Container>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { useEffect, useState } from 'react';\n\nconst axios = require('axios');\nconst ViewAll = props => {\n  const url = `http://localhost:8080/api/movies/?genre=${props.match.params.genre}`;\n  const [movieList, setMovieList] = useState([]);\n  useEffect(() => {\n    axios.get(url).then(res => setMovieList(res.data));\n  }, []);\n  return (\n    <div>\n      <ul>\n        {movieList.map(movie => {\n          return <li>{movie.title}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewAll;\n","import React from 'react';\nimport HeaderContainer from './components/HeaderContainer';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport User from './components/User';\nimport Submit from './components/Submit';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport ViewAll from './components/ViewAll';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <div>\n        <HeaderContainer />\n      </div>\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/new\" component={Submit} />\n          <Route exact path=\"/movie/:id\" component={Movie} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/genre/:genre\" component={ViewAll} />\n          <Route exact path=\"/user/:id\" component={User} />\n          <User />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n   <Router>\n      <App />\n   </Router>,\n   document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}